name: build
on: [push]

env:
    GO111MODULE: "on"
    GOPACKAGESPRINTGOLISTERRORS: "1"
    GL_DEBUG: "linters_output"

jobs:
    lint_go:
        name: run golangci-lint on Go subproject
        runs-on: ubuntu-latest
        steps:
            - name: set up env
              run: |
                  echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
                  echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
              shell: bash
            - uses: actions/checkout@v2
              with:
                  path: src/github.com/${{ github.repository }}
            - name: get dependencies
              run: |
                cd "${GITHUB_WORKSPACE}/src/github.com/${{ github.repository}}"
                go get -t -v ./...
            - name: install and run golangci-lint
              run: |
                curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.24.0
                cd "${GITHUB_WORKSPACE}/src/github.com/${{ github.repository}}"
                golangci-lint run
    build_go:
        name: build Go subproject
        needs: [lint_go]
        runs-on: ${{matrix.os}}
        strategy:
            matrix:
                os: [ubuntu-16.04, ubuntu-18.04, ubuntu-latest, macos-latest]
                go: ['1.13.x', '1.14.x']
        steps:
            - name: set up env
              run: |
                  echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
                  echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
              shell: bash
            - uses: actions/checkout@v2
              with:
                  path: src/github.com/${{ github.repository }}
            - name: set up go ${{ matrix.go }}
              uses: actions/setup-go@v2-beta
              with:
                  go-version: ${{ matrix.go }}
            - name: build project
              run: |
                cd "${GITHUB_WORKSPACE}/src/github.com/${{ github.repository}}"
                go get -v ./...
                go build
    test_go:
        name: run tests for the Go subproject
        needs: [build_go]
        runs-on: ubuntu-latest
        steps:
            - name: set up env
              run: |
                  echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
                  echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
              shell: bash
            - uses: actions/checkout@v2
              with:
                  path: src/github.com/${{ github.repository }}
            - name: set up go ${{ matrix.go }}
              uses: actions/setup-go@v2-beta
              with:
                  go-version: ${{ matrix.go }}
            - name: run tests
              run: |
                cd "${GITHUB_WORKSPACE}/src/github.com/${{ github.repository}}"
                go get -t -v ./...
                ./.travis/tests.sh
    coverage_go:
        name: code coverage via codecov.io for the Go subproject
        runs-on: ubuntu-latest
        needs: [test_go]
        steps:
            - uses: codecov/codecov-action@v1.0.0
              with:
                  file: ./coverage.txt
                  fail_ci_if_error: true
